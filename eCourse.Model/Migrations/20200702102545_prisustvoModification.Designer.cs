// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eCourse.Database.Context;

namespace eCourse.Database.Migrations
{
    [DbContext(typeof(CourseContext))]
    [Migration("20200702102545_prisustvoModification")]
    partial class prisustvoModification
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("eCourse.Database.Entities.ApplicationUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DatumRegistracije")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JMBG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OpcinaId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Slika")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Spol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OpcinaId");

                    b.ToTable("ApplicationUser");
                });

            modelBuilder.Entity("eCourse.Database.Entities.ApplicationUserRole", b =>
                {
                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("ApplicationUserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("ApplicationUserRole");
                });

            modelBuilder.Entity("eCourse.Database.Entities.Cas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumVrijemeOdrzavanja")
                        .HasColumnType("datetime2");

                    b.Property<int>("KursInstancaId")
                        .HasColumnType("int");

                    b.Property<string>("Lokacija")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Odrzan")
                        .HasColumnType("bit");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KursInstancaId");

                    b.ToTable("Cas");
                });

            modelBuilder.Entity("eCourse.Database.Entities.Clanarina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumIsteka")
                        .HasColumnType("datetime2");

                    b.Property<int>("KlijentId")
                        .HasColumnType("int");

                    b.Property<int>("UplataId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KlijentId");

                    b.HasIndex("UplataId");

                    b.ToTable("Clanarina");
                });

            modelBuilder.Entity("eCourse.Database.Entities.Ispit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumVrijemeIspita")
                        .HasColumnType("datetime2");

                    b.Property<int>("KursInstancaId")
                        .HasColumnType("int");

                    b.Property<string>("Lokacija")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("KursInstancaId");

                    b.ToTable("Ispit");
                });

            modelBuilder.Entity("eCourse.Database.Entities.IspitKlijentKursInstanca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Bodovi")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("IspitId")
                        .HasColumnType("int");

                    b.Property<int>("KlijentKursInstancaId")
                        .HasColumnType("int");

                    b.Property<bool>("Prisustvovao")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IspitId");

                    b.HasIndex("KlijentKursInstancaId");

                    b.ToTable("IspitKlijentKursInstanca");
                });

            modelBuilder.Entity("eCourse.Database.Entities.Klijent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Klijent");
                });

            modelBuilder.Entity("eCourse.Database.Entities.KlijentKursInstanca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("KlijentId")
                        .HasColumnType("int");

                    b.Property<int>("KursInstancaId")
                        .HasColumnType("int");

                    b.Property<bool?>("Polozen")
                        .HasColumnType("bit");

                    b.Property<int?>("Rejting")
                        .HasColumnType("int");

                    b.Property<bool?>("UplataIzvrsena")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("KlijentId");

                    b.HasIndex("KursInstancaId");

                    b.ToTable("KlijentKursInstanca");
                });

            modelBuilder.Entity("eCourse.Database.Entities.Kurs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SkraceniNaziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Kurs");
                });

            modelBuilder.Entity("eCourse.Database.Entities.KursInstanca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojCasova")
                        .HasColumnType("int");

                    b.Property<decimal?>("Cijena")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Kapacitet")
                        .HasColumnType("int");

                    b.Property<DateTime?>("KrajDatum")
                        .HasColumnType("datetime2");

                    b.Property<int>("KursId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PocetakDatum")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PrijaveDoDatum")
                        .HasColumnType("datetime2");

                    b.Property<int>("UposlenikId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KursId");

                    b.HasIndex("UposlenikId");

                    b.ToTable("KursInstanca");
                });

            modelBuilder.Entity("eCourse.Database.Entities.KursTag", b =>
                {
                    b.Property<int>("KursId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("KursId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("KursTag");
                });

            modelBuilder.Entity("eCourse.Database.Entities.Opcina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Opcina");
                });

            modelBuilder.Entity("eCourse.Database.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("eCourse.Database.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("eCourse.Database.Entities.TipUplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Cijena")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipUplate");
                });

            modelBuilder.Entity("eCourse.Database.Entities.Uplata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumUplate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Iznos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("KlijentId")
                        .HasColumnType("int");

                    b.Property<int?>("KursInstancaId")
                        .HasColumnType("int");

                    b.Property<int>("TipUplateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("KlijentId");

                    b.HasIndex("KursInstancaId");

                    b.HasIndex("TipUplateId");

                    b.ToTable("Uplata");
                });

            modelBuilder.Entity("eCourse.Database.Entities.Uposlenik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ApplicationUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatumZaposlenja")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId");

                    b.ToTable("Uposlenik");
                });

            modelBuilder.Entity("eCourse.Database.Entities.ApplicationUser", b =>
                {
                    b.HasOne("eCourse.Database.Entities.Opcina", "Opcina")
                        .WithMany()
                        .HasForeignKey("OpcinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eCourse.Database.Entities.ApplicationUserRole", b =>
                {
                    b.HasOne("eCourse.Database.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany("ApplicationUserRoles")
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCourse.Database.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eCourse.Database.Entities.Cas", b =>
                {
                    b.HasOne("eCourse.Database.Entities.KursInstanca", "KursInstanca")
                        .WithMany("Casovi")
                        .HasForeignKey("KursInstancaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eCourse.Database.Entities.Clanarina", b =>
                {
                    b.HasOne("eCourse.Database.Entities.Klijent", "Klijent")
                        .WithMany("ClanarineKlijenta")
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCourse.Database.Entities.Uplata", "Uplata")
                        .WithMany()
                        .HasForeignKey("UplataId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eCourse.Database.Entities.Ispit", b =>
                {
                    b.HasOne("eCourse.Database.Entities.KursInstanca", "KursInstanca")
                        .WithMany()
                        .HasForeignKey("KursInstancaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eCourse.Database.Entities.IspitKlijentKursInstanca", b =>
                {
                    b.HasOne("eCourse.Database.Entities.Ispit", "Ispit")
                        .WithMany("KlijentiNaIspitu")
                        .HasForeignKey("IspitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCourse.Database.Entities.KlijentKursInstanca", "KlijentKursInstanca")
                        .WithMany()
                        .HasForeignKey("KlijentKursInstancaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eCourse.Database.Entities.Klijent", b =>
                {
                    b.HasOne("eCourse.Database.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eCourse.Database.Entities.KlijentKursInstanca", b =>
                {
                    b.HasOne("eCourse.Database.Entities.Klijent", "Klijent")
                        .WithMany("KurseviKlijenta")
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCourse.Database.Entities.KursInstanca", "KursInstanca")
                        .WithMany("KlijentiNaKursu")
                        .HasForeignKey("KursInstancaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eCourse.Database.Entities.KursInstanca", b =>
                {
                    b.HasOne("eCourse.Database.Entities.Kurs", "Kurs")
                        .WithMany()
                        .HasForeignKey("KursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCourse.Database.Entities.Uposlenik", "Uposlenik")
                        .WithMany("KurseviUposlenika")
                        .HasForeignKey("UposlenikId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eCourse.Database.Entities.KursTag", b =>
                {
                    b.HasOne("eCourse.Database.Entities.Kurs", "Kurs")
                        .WithMany("TagoviKursa")
                        .HasForeignKey("KursId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCourse.Database.Entities.Tag", "Tag")
                        .WithMany("KurseviSaTagom")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eCourse.Database.Entities.Uplata", b =>
                {
                    b.HasOne("eCourse.Database.Entities.Klijent", "Klijent")
                        .WithMany("UplateKlijenta")
                        .HasForeignKey("KlijentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eCourse.Database.Entities.KursInstanca", "KursInstanca")
                        .WithMany()
                        .HasForeignKey("KursInstancaId");

                    b.HasOne("eCourse.Database.Entities.TipUplate", "TipUplate")
                        .WithMany()
                        .HasForeignKey("TipUplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("eCourse.Database.Entities.Uposlenik", b =>
                {
                    b.HasOne("eCourse.Database.Entities.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
